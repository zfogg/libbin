name: CI/CD

on:
  push:
    branches: [ master, main, develop, coverage ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test and Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        os: ubuntu
        enable-coverage: 'true'
        enable-sanitizers: 'true'

    - name: Build and test (optimized)
      run: |
        make clean
        make test

    - name: Build and test (debug)
      run: |
        make test-debug

    - name: Test with AddressSanitizer
      run: |
        make test-asan

    - name: Run static analysis
      run: |
        make check

    - name: Generate coverage report
      run: |
        make coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./build/*.gcov
        fail_ci_if_error: false
        verbose: true

  memory-check:
    name: Memory Safety Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        os: ubuntu
        extra-packages: 'valgrind'

    - name: Build for memory testing
      run: |
        make clean
        make test-debug

    - name: Run tests with Valgrind
      run: |
        valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all --track-origins=yes --error-exitcode=1 ./bin/bin_tests_debug

  cross-platform:
    name: Cross-platform Build (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            os-name: ubuntu
          - os: macos-latest  
            os-name: macos

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        os: ${{ matrix.os-name }}

    - name: Build and test
      run: |
        make clean
        make test

    - name: Run static analysis
      run: |
        make check

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        os: ubuntu

    - name: Run clang-tidy
      run: |
        make check-tidy

    - name: Check for constraint violations
      run: |
        echo "Checking for forbidden operators in source code..."
        if grep -n -E '(\&\&|\|\||!)' src/*.c | grep -v '//' | grep -v -E '(&&|\\|\\||!)' src/*.c; then
          echo "✅ Only allowed logical operators found"
        else  
          echo "❌ Potentially forbidden operators detected"
        fi
        
        # Check for bitwise operators (should be forbidden)
        if grep -n -E '(\&[^&]|\|[^|]|\^|<<|>>|~)' src/*.c | grep -v '//' | head -5; then
          echo "⚠️  Bitwise operators found - verify they comply with constraints"
        else
          echo "✅ No bitwise operators found"
        fi

